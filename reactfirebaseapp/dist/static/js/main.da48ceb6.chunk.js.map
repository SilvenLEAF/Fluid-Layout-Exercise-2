{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","ProjectSummary","project","title","content","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","user","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.da48ceb6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nfunction SignedInLinks(props) {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n      <li><a onClick= {props.signOut}>Log Out</a></li>\r\n      <li><NavLink to=\"/\" className=\"btn-floating pink lighten-1 center\">{ props.profile.initials }</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","import firebase from 'firebase/app'\r\n\r\nexport const signIn = (credentials) =>{\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS'})\r\n      })\r\n      .catch( err => dispatch({ type: 'LOGIN_ERROR', err}))\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(()=>{\r\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) =>{\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((res) => {\r\n        \r\n        return firestore.collection('users').doc(res.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        })\r\n\r\n      }).then(() => {\r\n        dispatch({type: 'SIGNUP_SUCCESS'})\r\n      }).catch((err) => {\r\n        dispatch({type: 'SIGNUP_ERROR', err})\r\n      })\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction SignedOutLinks() {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n      <li><NavLink to=\"/signin\">Log In</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Navbar(props) {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedInLinks profile = { profile }/> : <SignedOutLinks/>\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\r\n        { links }\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react'\r\n\r\nfunction Notifications() {\r\n  return (\r\n    <div>\r\n      <p>Notifications</p>      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nfunction ProjectSummary({ project }) {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{ project.title }</span>\r\n        <p className=\"red-text darken-4\">{ project.content }</p>\r\n        <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\r\n        <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction ProjectList({ projects }) {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map( project => {\r\n        return(\r\n          <Link to = { '/project/' + project.id } key={ project.id }>\r\n            <ProjectSummary project={ project }/>\r\n          </Link>\r\n         \r\n        )\r\n      })  }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth } = this.props;\r\n    if(!auth.uid) return <Redirect to = '/signin' />\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={ projects }/>\r\n          </div>\r\n          <div className=\"col s12 m5 offset-1\">\r\n            <Notifications />            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps), \r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: [ 'createdAt', 'desc' ] }\r\n  ])\r\n)(Dashboard);","import React from 'react'\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment'\r\n\r\n\r\nfunction ProjectDetails(props) {\r\n  const id = props.match.params.id;\r\n  const { project, auth } = props;\r\n  if(!auth.uid) return <Redirect to = '/signin' />\r\n\r\n\r\n  return project ? (\r\n    <div className=\"container section project-details\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n  <span className=\"card-title\">{ project.title }</span>\r\n          <p>{project.content}</p>\r\n        </div>\r\n        <div className=\"card-action grey lighten-4 grey-text\">\r\n          <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n          <div>{ moment(project.createdAt.toDate()).calendar() }</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div>Loading project...</div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport class SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e)=>{\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to = '/' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={ this.handleSubmit }>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={ this.handleChange }/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={ this.handleChange }/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">LogIn</button>\r\n            <div className = \"red-text center\">{ authError ? <p>{ authError }</p> : null }</div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (credentials) => {\r\n      dispatch(signIn(credentials))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nexport class SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  }\r\n  handleChange = (e)=>{\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to = '/' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={ this.handleSubmit }>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={ this.handleChange }/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={ this.handleChange }/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={ this.handleChange }/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={ this.handleChange }/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n            <div className = \"red-text center\">{ authError ? <p>SignUp failed</p> : null }</div>            \r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    signUp: (newUser)=> {\r\n      dispatch(signUp(newUser))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport class CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e)=>{\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if(!auth.uid) return <Redirect to = '/signin' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={ this.handleSubmit }>\r\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={ this.handleChange }/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={ this.handleChange }></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nconst mapDispacthToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => {\r\n      dispatch(createProject(project))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispacthToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n\r\n    }).then(()=>{\r\n      \r\n      dispatch({\r\n        type: 'CREATE_PROJECT',\r\n        project: project\r\n      })\r\n\r\n    }).catch((err)=>{\r\n\r\n      dispatch({\r\n        type: 'CREATE_PROJECT_ERROR',\r\n        err: err\r\n      })\r\n\r\n    })\r\n    \r\n  }\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nfunction App() {\n  return (\n    <BrowserRouter>     \n      <div className=\"App\">\n        <Navbar></Navbar>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard}/>\n          <Route path=\"/project/:id\" component={ProjectDetails}/>\n          <Route path=\"/signin\" component={SignIn}/>\n          <Route path=\"/signup\" component={SignUp}/>\n          <Route path=\"/create\" component={CreateProject}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null  \r\n}\r\n\r\n\r\nfunction authReducer(state = initState, action) {\r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login failed')\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success')\r\n      return state\r\n\r\n    case 'SIGNUP_SUCCESS':\r\n    console.log('signup success')\r\n    return {\r\n      ...state,\r\n      authError: null\r\n    }\r\n\r\n    case 'SIGNUP_ERROR':\r\n    console.log('signup failed')\r\n    return {\r\n      ...state,\r\n      authError: action.err.message\r\n    }\r\n    \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default authReducer\r\n","const initState = {\r\n projects: [\r\n   { id: 1, title: 'The Croods 3', content: 'The whole world is about to change once again. Once again the Croods set out on an adventurous journey!!! Fun, adventure and stupidity! The Croods againgst the Mother Earth!!!'},\r\n   { id: 2, title: 'Ferdinand II', content: 'Ferdinad and his friends set out on a new adventure! Fun, adventure and romance begins!!! Will Ferdinand finally find his true love???'},\r\n   { id: 3, title: 'How to Train Your Dragon 4', content: 'Tothless and Hiccup fly out once again on a flying adventure!!! Love, friendship and........Dragonssss!!!'},\r\n   { id: 4, title: 'Ratatouille III', content: 'Chef Remy cooks another delicious adventure of flavours, taste and adventure!!! Spices of thrill adventure and fun and many many many more undiscovered savours!!!'},\r\n   { id: 5, title: 'Cars 4', content: 'Lightning is back on tracks!!! The heart-throbbing laps starts once again!!! Once a rookie, once a legend!!! Days bygone!!! Now the rookie is back to gobsmack everyone!!!'},\r\n ] \r\n}\r\n\r\n\r\nfunction projectReducer(state = initState, action) {\r\n  switch (action.type){\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project)\r\n      return state;       //my added\r\n\r\n    default :           //my added\r\n      return state              //my added\r\n  }\r\n  // return state\r\n}\r\n\r\nexport default projectReducer\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\n var firebaseConfig = {\r\n  apiKey: \"AIzaSyA3GVL4mcbSsNeBOvwdr0iiwE5QmH1x9dc\",\r\n  authDomain: \"silvenleaf-reactfirebaseapp.firebaseapp.com\",\r\n  databaseURL: \"https://silvenleaf-reactfirebaseapp.firebaseio.com\",\r\n  projectId: \"silvenleaf-reactfirebaseapp\",\r\n  storageBucket: \"silvenleaf-reactfirebaseapp.appspot.com\",\r\n  messagingSenderId: \"228804134327\",\r\n  appId: \"1:228804134327:web:e7c754ed24960721f05432\",\r\n  measurementId: \"G-TMJ3JFRM8N\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase.firestore().settings({ timestampsInSnapshots: true })\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nimport { getFirestore, reduxFirestore } from 'redux-firestore';\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\n\n\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n  )\n);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n \n          <App />\n \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}